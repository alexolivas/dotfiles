#!/bin/bash
#########################################################################################################
# This script will create a bin directory inside of dropbox. This bin will contain all my custom
# scripts and settings, modifications should only be made in this dotfiles project then installed by
# executing this bash script. Every time this bash script is executed it will delete the existing
# $HOME/Dropbox/bin directory and replace its contents with this project's contents to ensure that
# the scripts are kept in sync (with changes made directly to this project) across multiple
# computers.
#########################################################################################################

# Color variables
CYAN="\033[36m"
BLUE="\033[34m"
GREEN="\033[32m"
RED="\033[31m"
YELLOW="\033[33m"
ENDCOLOR="\033[m"

BOLD=$(tput bold)
NORMAL=$(tput sgr0)

# Check if dropbox is installed
if [ ! -d "$HOME/Dropbox" ]; then
    echo -e "[$RED ${BOLD}ERROR$ENDCOLOR ${NORMAL}] Dropbox installation not found, missing directory: $BLUE $HOME/Dropbox $ENDCOLOR"
    echo -e "[$RED ${BOLD}ERROR$ENDCOLOR ${NORMAL}] Exiting.."
    exit 1
fi

# Directory variables
dir=$(pwd)
dropboxBin=$HOME/Dropbox/bin

echo "================================================================================"
echo -e "[$GREEN ${BOLD}BEGIN$ENDCOLOR ${NORMAL}] Installing your latest scripts on this computer"
echo "================================================================================"

echo ""
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Creating bin directory: $BLUE $dropboxBin $ENDCOLOR"
rm -rf $dropboxBin
mkdir -p $dropboxBin

# Copy over all the scripts from this project into the dropbox bin directory with execute permissions
echo ""
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] ${BOLD}Installing personal scripts..${NORMAL}"
scripts=$dir/scripts/*
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Granting owner execute permissions to scripts.."
for script in $scripts; do
    echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] chmod u+x $BLUE $script $ENDCOLOR"
    chmod u+x $script
    cp -p $script $dropboxBin
done
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Copying scripts to $BLUE $dropboxBin $ENDCOLOR"

echo ""
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] ${BOLD}Installing Hobsons specific scripts..${NORMAL}"

# Copy over all the scripts from this project's "hobsons" directory into the $HOME/bin
# directory with execute permissions
hobsonsScripts=$dir/hobsons/*
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Granting owner execute permissions to scripts.."
for script in $hobsonsScripts; do
    echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] chmod u+x $BLUE $script $ENDCOLOR"
    chmod u+x $script
    cp -p $script $dropboxBin
done
echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Copying scripts to $BLUE $dropboxBin $ENDCOLOR"

echo ""

# Check if .bash_profile exists, if it does not, warn the user to install .bash_profile and .bashrc
# by running the ./update_dotfiles script, otherwise, source the .bash_profile so these scripts
# are available within this and any future bash sessions.
if [ ! -f "$HOME/.bash_profile" ]; then
    echo -e "[$YELLOW ${BOLD}WARNING$ENDCOLOR ${NORMAL}] $YELLOW.bash_profile not found, to fix run the script:$ENDCOLOR $BLUE ./dotfiles_install $ENDCOLOR from$BLUE $dir/scripts/$ENDCOLOR"
else
    # Source .bash_profile so these scripts are available immediately without starting a new shell session
    echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] ${BOLD}Sourcing .bash_profile to make scripts available within this shell session${NORMAL}"
    echo -e "[$GREEN ${BOLD}INFO$ENDCOLOR ${NORMAL}] Running command: $BLUE . $HOME/.bash_profile$ENDCOLOR"
    . $HOME/.bash_profile
fi

